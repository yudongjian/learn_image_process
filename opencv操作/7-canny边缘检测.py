'''

Canny边缘检测:   canny 自己写的一篇论文，因此命名为canny   ---- Canyou
    1) 使用高斯滤波器，以平滑图像，滤除噪声  ---->  归一化
            0.0924  0.1192  0.0924
     H  =   0.1192  0.1538  0.1192   中间的影响大，边缘影响小
            0.0924  0.1192  0.0924

    2) 计算图像中每个像素点的梯度强度和方向。
            sobel 算子
            为了简化计算，由于一个像素周围有八个像素，
            把一个像素的梯度方向离散为八个方向，这样就只需计算前后即可，不用插值了
    3) 应用非极大值(Non-Maximum Suppression)抑制，以消除边缘检测带来的杂散响应。
             ---->  保留最为明显的梯度变化

    4) 应用双阈值 (Double-Threshold) 检测来确定真实的和潜在的边缘。
            ----> 最大值，最小值边界，只保留自己需要范围内的边界
            梯度值>maxVal: 则处理为边界
            minVal<梯度值<maxVal:连有边界则保留，否则舍弃
            梯度值<minVal: 则舍弃

    5) 通过抑制孤立的弱边缘最终完成边缘检测。
            ---->  得出结果


'''

import cv2
image1 = cv2.imread('lina.jpg')
img = cv2.Canny(image1, 80,180)

cv2.imshow('img', img)
cv2.waitKey(0)
cv2.destroyAllWindows()